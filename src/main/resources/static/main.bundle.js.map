{"version":3,"sources":["/Users/stevie/IdeaProjects/todo-app/src/main/ui/src/$_lazy_route_resource lazy","/Users/stevie/IdeaProjects/todo-app/src/main/ui/src/app/app.component.css","/Users/stevie/IdeaProjects/todo-app/src/main/ui/src/app/app.component.html","/Users/stevie/IdeaProjects/todo-app/src/main/ui/src/app/app.component.ts","/Users/stevie/IdeaProjects/todo-app/src/main/ui/src/app/app.module.ts","/Users/stevie/IdeaProjects/todo-app/src/main/ui/src/app/dialogs/todo-dialog.css","/Users/stevie/IdeaProjects/todo-app/src/main/ui/src/app/dialogs/todo-dialog.html","/Users/stevie/IdeaProjects/todo-app/src/main/ui/src/app/dialogs/todo-dialog.ts","/Users/stevie/IdeaProjects/todo-app/src/main/ui/src/app/model/todo.ts","/Users/stevie/IdeaProjects/todo-app/src/main/ui/src/environments/environment.ts","/Users/stevie/IdeaProjects/todo-app/src/main/ui/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stevie/IdeaProjects/todo-app/src/main/ui/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".main-content {\\n  width: 100%;\\n}\\n\\n.create-button {\\n  margin: 10px;\\n}\\n\\n.todos-panel {\\n  padding-top: 10px;\\n}\\n\\n.complete {\\n  color: green;\\n}\\n\\n.uncomplete {\\n  color: red;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stevie/IdeaProjects/todo-app/src/main/ui/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<mat-toolbar>Todo Application</mat-toolbar>\\n<div class=\\\"main-content\\\">\\n  <button mat-button color=\\\"primary\\\" (click)=\\\"onNewTodoClick()\\\" class=\\\"create-button\\\">\\n    <mat-icon>library_add</mat-icon>\\n    New Todo\\n  </button>\\n  <div class=\\\"todos-panel\\\">\\n    <!-- Uncompleted Todos -->\\n    <mat-accordion>\\n      <mat-expansion-panel *ngFor=\\\"let todo of getUncompletedTodos(); index as i\\\">\\n        <mat-expansion-panel-header>\\n          <mat-panel-title>\\n            <mat-icon class=\\\"uncomplete\\\">close</mat-icon>\\n            <span><strong>{{todo.createts | date: 'medium' }}</strong></span>\\n          </mat-panel-title>\\n          <mat-panel-description>{{todo.title}}</mat-panel-description>\\n        </mat-expansion-panel-header>\\n        <p>{{todo.description}}</p>\\n        <mat-action-row>\\n          <button mat-button color=\\\"primary\\\" (click)=\\\"todo.completed = true\\\">\\n            <mat-icon>check</mat-icon>\\n            Complete\\n          </button>\\n          <button mat-button color=\\\"secondary\\\" (click)=\\\"deleteTodo(i)\\\">\\n            <mat-icon>delete</mat-icon>\\n            Delete\\n          </button>\\n        </mat-action-row>\\n      </mat-expansion-panel>\\n    </mat-accordion>\\n    <!-- Completed Todos -->\\n    <mat-accordion>\\n      <mat-expansion-panel *ngFor=\\\"let todo of getCompletedTodos(); index as i\\\">\\n        <mat-expansion-panel-header>\\n          <mat-panel-title>\\n            <mat-icon class=\\\"complete\\\">check</mat-icon>\\n            <span><strong>{{todo.createts | date: 'medium' }}{{todo.title}}</strong></span>\\n          </mat-panel-title>\\n          <mat-panel-description>{{todo.title}}</mat-panel-description>\\n        </mat-expansion-panel-header>\\n        <p>{{todo.description}}</p>\\n        <mat-action-row>\\n          <button mat-button color=\\\"primary\\\" (click)=\\\"todo.completed = false\\\">\\n            <mat-icon>close</mat-icon>\\n            Uncomplete\\n          </button>\\n          <button mat-button color=\\\"secondary\\\" (click)=\\\"deleteTodo(i)\\\">\\n            <mat-icon>delete</mat-icon>\\n            Delete\\n          </button>\\n        </mat-action-row>\\n      </mat-expansion-panel>\\n    </mat-accordion>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stevie/IdeaProjects/todo-app/src/main/ui/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { TodoDialog } from \"./dialogs/todo-dialog\";\nimport { MatDialog } from \"@angular/material\";\nimport { Todo } from \"./model/todo\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  todos: Todo[] = [];\n\n  constructor(private todoDialogRef: MatDialog, private http: HttpClient) {}\n\n  ngOnInit() {\n    this.http.get<Todo[]>(\"/todos\").subscribe(result => {\n      this.todos = result['_embedded']['todos'];\n    });\n  }\n\n  onNewTodoClick(): void {\n    let dialogRef = this.todoDialogRef.open(TodoDialog, {\n      data: {\n        title: 'Create new Todo'\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n      if (result) {\n        if (result.title) {\n          console.log(\"saving new todo\");\n          this.saveNewTodo(result);\n        }\n      }\n    });\n  }\n\n  getUncompletedTodos(): Todo[] {\n    return this.todos.filter(todo => !todo.completed);\n  }\n\n  getCompletedTodos(): Todo[] {\n    return this.todos.filter(todo => todo.completed);\n  }\n\n  saveNewTodo(todo: Todo) {\n    this.http.post<Todo>(\"/todos\", todo).subscribe(response => {\n      console.log(response);\n      this.todos.push(response)\n    });\n  }\n\n  updateTodo(index: number): void {\n    let todo = this.todos[index];\n    let uri = `/todos/${todo.id}`;\n    this.http.put(uri, todo).subscribe(result => {\n      console.log(result);\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/stevie/IdeaProjects/todo-app/src/main/ui/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { HttpClientModule } from \"@angular/common/http\";\n\nimport {\n  MatToolbarModule,\n  MatButtonModule,\n  MatIconModule,\n  MatCheckboxModule,\n  MatDialogModule,\n  MatExpansionModule,\n  MatInputModule\n} from \"@angular/material\";\nimport { TodoDialog } from \"./dialogs/todo-dialog\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodoDialog\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatInputModule\n  ],\n  entryComponents: [\n    AppComponent, TodoDialog\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/stevie/IdeaProjects/todo-app/src/main/ui/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".full-width {\\n  width: 100%;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stevie/IdeaProjects/todo-app/src/main/ui/src/app/dialogs/todo-dialog.css\n// module id = ../../../../../src/app/dialogs/todo-dialog.css\n// module chunks = main","module.exports = \"<h2 mat-dialog-title>\\n  <mat-icon>library_add</mat-icon>\\n  {{data.title}}\\n</h2>\\n<mat-dialog-content>\\n  <form>\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input matInput placeholder=\\\"Todo Title\\\" name=\\\"title\\\" [(ngModel)]=\\\"todo.title\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"full-width\\\">\\n      <textarea matInput placeholder=\\\"Todo Description\\\" name=\\\"description\\\" [(ngModel)]=\\\"todo.description\\\"></textarea>\\n    </mat-form-field>\\n  </form>\\n</mat-dialog-content>\\n<mat-dialog-actions>\\n  <button mat-button (click)=\\\"onCancelClick()\\\">Cancel</button>\\n  <button mat-button (click)=\\\"onSaveClick()\\\">Save</button>\\n</mat-dialog-actions>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stevie/IdeaProjects/todo-app/src/main/ui/src/app/dialogs/todo-dialog.html\n// module id = ../../../../../src/app/dialogs/todo-dialog.html\n// module chunks = main","import { Component, Inject } from \"@angular/core\";\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material\";\nimport { Todo } from \"../model/todo\";\n\n@Component({\n  selector: 'todo-dialog',\n  templateUrl: 'todo-dialog.html',\n  styleUrls: ['todo-dialog.css']\n})\nexport class TodoDialog {\n\n  todo: Todo = new Todo();\n\n  constructor(public dialogRef: MatDialogRef<TodoDialog>, @Inject(MAT_DIALOG_DATA) public data: any) {}\n\n  onSaveClick(): void {\n    this.dialogRef.close(this.todo);\n  }\n\n  onCancelClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/stevie/IdeaProjects/todo-app/src/main/ui/src/app/dialogs/todo-dialog.ts","export class Todo {\n  id: number;\n  title: string = '';\n  description: string = '';\n  createts: Date;\n  completed: boolean;\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/stevie/IdeaProjects/todo-app/src/main/ui/src/app/model/todo.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/stevie/IdeaProjects/todo-app/src/main/ui/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/stevie/IdeaProjects/todo-app/src/main/ui/src/main.ts"],"sourceRoot":"webpack:///"}